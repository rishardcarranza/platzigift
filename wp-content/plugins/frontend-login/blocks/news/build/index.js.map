{"version":3,"file":"index.js","mappings":"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","sources":["webpack://blocks/./news/src/edit.js","webpack://blocks/./news/src/edit.scss?f40e","webpack://blocks/external window [\"wp\",\"apiFetch\"]","webpack://blocks/external window [\"wp\",\"blockEditor\"]","webpack://blocks/external window [\"wp\",\"blocks\"]","webpack://blocks/external window [\"wp\",\"components\"]","webpack://blocks/external window [\"wp\",\"element\"]","webpack://blocks/webpack/bootstrap","webpack://blocks/webpack/runtime/compat get default export","webpack://blocks/webpack/runtime/define property getters","webpack://blocks/webpack/runtime/hasOwnProperty shorthand","webpack://blocks/webpack/runtime/make namespace object","webpack://blocks/./news/src/index.js"],"sourcesContent":["import { useBlockProps } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useState, useEffect } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { Panel, PanelBody, SelectControl } from '@wordpress/components';\n\nconst Edit = (props) => {\n    const {attributes, setAttributes} = props;\n    const {category} = attributes;\n    const blockProps = useBlockProps();\n    const [posts, setPosts] = useState([]);\n    const [categories, setCategories] = useState([]);\n\n    const fetchPosts = async () => {\n        let path = \"/wp/v2/posts\";\n        // Si aun no existe la category pasarle 1, ya que sera la primera siempre\n        setAttributes({category: (category || 1) })\n        if (category) {\n            path = path + `?categories=${category}`;\n        }\n        \n        const newPosts = await apiFetch({path});\n        setPosts(newPosts);\n    }\n    \n    const fetchCategories = async () => {\n        const path = \"/wp/v2/categories?hide_empty=true\";\n        const newCategories = await apiFetch({path});\n        const filterCategories = newCategories.map((currentCategory) => {\n            return {\n                label: currentCategory.name,\n                value: currentCategory.id,\n            }\n        });\n        setCategories(filterCategories);\n    }\n\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    useEffect(() => {\n        fetchPosts();\n    }, [category]);\n\n    return (\n        <>\n        {\n            (categories.length > 0) &&\n            <InspectorControls>\n                <Panel>\n                    <PanelBody title='Categories' initialOpen={true}>\n                        <SelectControl \n                            label=\"Current Category\"\n                            value={category || 1}\n                            options={categories}\n                            onChange={(newCategory) => setAttributes({category: newCategory})}\n                        />\n                    </PanelBody>\n                </Panel>\n            </InspectorControls>\n        }\n        {\n            (posts.length > 0) &&\n            <div {...blockProps}>\n                <h3>Te interesa leer esto</h3>\n                <ul className=\"posts\">\n                    {\n                        posts.map((post) => {\n                            return (\n                                <li key={post.id}>\n                                    <a href={post.link}>\n                                        {post.title.rendered}\n                                    </a>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        }\n        </>\n    );\n};\n\nexport default Edit;","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport meta from \"./../block.json\";\nimport Edit from \"./edit\";\nimport \"./edit.scss\";\n\nregisterBlockType(meta, {\n    edit: Edit,\n    save: () => null,\n});\n"],"names":["useBlockProps","apiFetch","useState","useEffect","InspectorControls","Panel","PanelBody","SelectControl","Edit","props","attributes","setAttributes","category","blockProps","posts","setPosts","categories","setCategories","fetchPosts","path","newPosts","fetchCategories","newCategories","filterCategories","map","currentCategory","label","name","value","id","length","newCategory","post","link","title","rendered","registerBlockType","meta","edit","save"],"sourceRoot":""}